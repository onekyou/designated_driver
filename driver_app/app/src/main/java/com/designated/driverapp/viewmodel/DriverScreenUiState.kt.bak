package com.designated.driverapp.viewmodel

import com.designated.driverapp.model.CallInfo
import com.designated.driverapp.model.DriverInfo
import com.designated.driverapp.model.DriverStatus

/**
 * 홈 화면의 모든 UI 상태를 나타내는 단일 데이터 클래스입니다.
 * Single Source of Truth 역할을 하여 Race Condition을 방지하고 상태 관리를 단순화합니다.
 */
data class DriverScreenUiState(
    // 사용자 관련 상태
    val driverInfo: DriverInfo? = null,
    val driverStatus: DriverStatus = DriverStatus.OFFLINE,
    val currentLocationAddress: String? = null,
    val locationFetchStatus: LocationFetchStatus = LocationFetchStatus.Idle,

    // 콜 관련 상태
    val activeCall: CallInfo? = null,           // 현재 운행 중(ASSIGNED, ACCEPTED, IN_PROGRESS)인 콜
    val callForSettlement: CallInfo? = null,    // 정산이 필요한(AWAITING_SETTLEMENT) 콜
    val newCallPopupToShow: CallInfo? = null,   // 새로 배차되어 팝업을 띄워야 할 콜
    val completedCalls: List<CallInfo> = emptyList(), // 완료된 콜 목록 (정산 내역 화면용)

    // UI 제어 상태
    val isLoading: Boolean = true,              // 초기 데이터 로딩 중인지 여부
    val errorMessage: String? = null,           // 사용자에게 보여줄 오류 메시지
    val navigateToHome: Boolean = false         // 특정 작업 후 홈 화면으로 강제 이동이 필요한 경우 사용
)

/**
 * 위치 정보 조회 상태를 나타내는 Sealed 클래스입니다.
 */
sealed class LocationFetchStatus {
    object Idle : LocationFetchStatus()
    object Loading : LocationFetchStatus()
    object Success : LocationFetchStatus()
    data class Error(val message: String) : LocationFetchStatus()
}
